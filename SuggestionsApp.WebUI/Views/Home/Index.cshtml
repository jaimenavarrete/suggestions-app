@model IndexViewModel
@{
    ViewData["Title"] = "Home Page";
}

<section class="text-center text-white mb-5">
    <h1 class="display-2 text-uppercase fw-bold mt-5 mb-5">Bienvenido a SuggestionsApp</h1>
    
    <p class="h5 mb-5">Nuestro sitio de sugerencias te deja a disposición un área en la que podrás dejar las recomendaciones, que como usuario estimes convenientes para nuestra mejora continua.</p>

    <a asp-controller="Suggestions" asp-action="CreateSuggestion" class="btn btn-outline-light btn-lg mb-5"><i class="las la-plus"></i> Crear sugerencia</a>
</section>

<div class="row">
    <section class="col-md-9">
        <div class="row mb-5">
            @if(Model.SuggestionsAmount == 0)
            {
                <p class="col-md-7 h4 text-md-left text-white fw-bold">Sin sugerencias</p>
            }
            else if(Model.SuggestionsAmount == 1)
            {
                <p class="col-md-7 h4 text-md-left text-white fw-bold">@Model.SuggestionsAmount sugerencia</p>
            }
            else
            {
                <p class="col-md-7 h4 text-md-left text-white fw-bold">@Model.SuggestionsAmount sugerencias</p>
            }
            
            <section class="col-md-5 btn-group" role="group" aria-label="Botones">
                <button type="button" class="btn btn-light">Nuevos</button>
                <button type="button" class="btn btn-light">Populares</button>
            </section>
        </div>

        <section class="row p-2 mb-4">
            
            <partial name="_StatusMessage" />
            
            @if (Model.SuggestionsAmount == 0)
            {
                <div class="alert alert-light">
                    <p class="mb-0 text-primary fw-bold">
                        <i class="las la-info-circle fs-4"></i>
                        Actualmente no existen sugerencias.
                    </p>
                </div>
            }

            @foreach(var suggestion in Model.SuggestionsList)
            {
                <article class="card shadow border-primary overflow-hidden mb-3">
                    <div class="card-body row p-3 d-flex justify-content-between align-items-start">
                        <form asp-controller="Suggestions" asp-action="ChangeSuggestionUpvote" method="post" class="upvote-button col-2 btn text-center border border-2 border-primary rounded d-flex flex-column p-1 @(suggestion.IsUserSuggestion ? "disabled" : "") @(suggestion.IsUserUpvoteActive ? "bg-primary text-white" : "bg-white text-primary")">
                            <input type="hidden" name="suggestionId" id="suggestionId" value="@suggestion.Id" />
                            <i class="las la-chevron-up fs-3"></i>
                            <p class="h5 fw-bold mb-0">@suggestion.UpvotesAmount</p>
                            <p class="fw-bold text-uppercase mb-0 d-none d-sm-block">@(suggestion.IsUserUpvoteActive ? "Votada" : "Votar")</p>
                        </form>

                        <section class="col-9 col-lg-10 offset-1 offset-lg-0 d-flex flex-column justify-content-between px-lg-2">
                            <header class="d-lg-flex justify-content-between align-items-start mb-3 pb-1">
                                <span class="badge py-2 px-4 fs-6 mb-3 order-2" style="background:@suggestion.StateColorHexCode">@suggestion.StateName</span>
                                <div class="order-1">
                                    <h5 class="card-title mb-2">@suggestion.Title</h5>
                                    <h6 class="card-subtitle text-muted">@suggestion.UserName</h6>
                                </div>
                            </header>

                            <footer class="d-flex justify-content-between align-items-center">
                                <p class="text-muted text-uppercase fw-bold mb-0">@suggestion.CategoryName</p>
                                <div class="d-flex align-items-center">
                                    <a asp-controller="Suggestions" asp-action="ViewSuggestion" asp-route-id="@suggestion.Id"><i class="las la-eye text-muted fs-3 px-1"></i></a>

                                    @if(suggestion.IsUserSuggestion)
                                    {
                                        <a asp-controller="Suggestions" asp-action="EditSuggestion" asp-route-id="@suggestion.Id"><i class="las la-pen text-muted fs-3 px-1"></i></a>
                                        <form asp-controller="Suggestions" asp-action="DeleteSuggestion" method="post" class="delete-element-form">
                                            <input type="hidden" value="@suggestion.Id" name="suggestionId" />
                                            <button class="bg-white border-0 p-0"><i class="las la-trash text-danger fs-3 px-1"></i></button>
                                        </form>
                                    }
                                </div>
                            </footer>
                        </section>
                    </div>
                </article>
            }

        </section>

    </section>
    <section class="col-md-3">
        <article class="mb-4 mb-md-5">
            <form class="input-group" asp-controller="Home" asp-action="Index" method="get" id="form-search-text">
                <input type="text" name="search" class="form-control" placeholder="Buscar" aria-label="Barra de busqueda" value="@Model.SearchText">
                <button class="btn btn-primary"><i class="las la-search"></i></button>
            </form>
        </article>

        <article class="card shadow mb-3 p-1">
            <div class="card-header text-primary text-uppercase fw-bold bg-white border-bottom border-2 border-primary"><i class="las la-flag fs-4"></i> Estados</div>

            <ul class="card-body list-unstyled mb-0">
                <li>
                    <a class="state-search d-block text-decoration-none py-2 @(Model.StateSearchId == null ? "active-link" : "text-black")" data-stateid="">
                        Todos
                    </a>
                </li>
                
                @foreach(var state in Model.StatesList)
                {
                    <li class="mb-2">
                        <a class="state-search d-block text-decoration-none py-1 @(Model.StateSearchId == state.Id ? "active-link" : "text-black")" data-stateid="@state.Id">
                            <i class="las la-square-full fs-4" style="color: @state.ColorHexCode"></i> @state.Name
                        </a>
                    </li>
                }
            </ul>
        </article>

        <article class="card shadow mb-3 p-1">
            <div class="card-header text-primary text-uppercase fw-bold bg-white border-bottom border-2 border-primary"><i class="las la-tags fs-4"></i> Categorías</div>

            <ul class="card-body list-unstyled mb-0">
                <li>
                    <a class="category-search d-block text-decoration-none py-2 @(Model.CategorySearchId == null ? "active-link" : "text-black")" data-categoryid="">
                        Todos
                    </a>
                </li>
                
                @foreach(var category in Model.CategoriesList)
                {
                    <li class="mb-2">
                        <a class="category-search d-block text-decoration-none py-1 @(Model.CategorySearchId == category.Id ? "active-link" : "text-black")" data-categoryid="@category.Id">
                            @category.Name
                        </a>
                    </li>
                }
            </ul>
        </article>
    </section>
</div>

@section Scripts {
    <script>
        const baseUrl = window.location.origin;
        const buttonsStateSearch = document.querySelectorAll(".state-search");
        const buttonsCategorySearch = document.querySelectorAll(".category-search");
        let queryParams = new URLSearchParams(window.location.search);

        // Buttons to search by state
        buttonsStateSearch.forEach(btn => {
            if(btn.dataset.stateid)
                queryParams.set("stateId",btn.dataset.stateid);
            else
                queryParams.delete("stateId");

            btn.href = `${baseUrl}/?${queryParams}`;
        });

        queryParams = new URLSearchParams(window.location.search);

        // Buttons to search by category
        buttonsCategorySearch.forEach(btn => {
            if(btn.dataset.categoryid)
                queryParams.set("categoryId",btn.dataset.categoryid);
            else
                queryParams.delete("categoryId");

            btn.href = `${baseUrl}/?${queryParams}`;
        });

        // Submit search text form if the value is empty
        const formSearchText = document.getElementById("form-search-text");

        const submitEmptySearchText = () => {
            const inputSearchText = formSearchText.elements["search"];

            if(inputSearchText.value === "") {
                inputSearchText.setAttribute("disabled", "");
                formSearchText.submit();
            }
        }

        formSearchText.addEventListener('keyup', () => submitEmptySearchText());
        formSearchText.addEventListener('focusout', () => submitEmptySearchText());

        // Button to upvote suggestion
        const buttonsUpvote = document.querySelectorAll('.upvote-button');

        buttonsUpvote.forEach(btnForm => {
            btnForm.addEventListener('click', () => btnForm.submit());
        })

    </script>
}