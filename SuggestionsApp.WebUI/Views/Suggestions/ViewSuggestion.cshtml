@model ViewSuggestionViewModel
@{
    ViewData["Title"] = "Index";
}

<h1 class="display-2 text-center text-white fw-bold my-5">Detalles de la sugerencia</h1>

<partial name="_StatusMessage" />

@if(Model.Approved is null)
{
    <div class="alert alert-warning">
        <p class="mb-0">
            <i class="las la-exclamation-triangle fs-4"></i>
            <strong>Aprobación en proceso!</strong> Actualmente esta sugerencia no se podrá visualizar por los usuarios.
        </p>
    </div>
}
else if (Model.Approved == false)
{
    <div class="alert alert-danger">
        <p class="mb-0">
            <i class="las la-times fs-4"></i>
            <strong>Rechazada!</strong> La sugerencia ha sido rechazada por el administrador o por un moderador.
        </p>
    </div>
}

<section class="card shadow overflow-hidden mb-4 p-2">
    <div class="card-header bg-white p-0">
        <a asp-controller="Home" asp-action="Index" class="btn text-secondary mb-0">
            <i class="las la-arrow-left fs-3 px-1"></i> Regresar
        </a>
    </div>

    <div class="card-body row p-3 d-flex justify-content-between align-items-start">
        <aside class="col-2 text-center p-0 px-md-3">
            <form asp-controller="Suggestions" asp-action="ChangeSuggestionUpvote" method="post" id="upvote-button" class="upvote-button btn text-center border border-2 border-primary rounded d-flex flex-column justify-content-around p-1 mx-auto mb-2 @(Model.IsUserSuggestion ? "disabled" : "") @(Model.IsUserUpvoteActive ? "bg-primary text-white" : "bg-white text-primary")">
                <input type="hidden" name="suggestionId" id="suggestionId" value="@Model.Id" />
                <input type="hidden" name="isFromViewSuggestion" id="isFromViewSuggestion" value="true" />
                <i class="las la-chevron-up fs-3"></i>
                <p class="h5 fw-bold mb-0">@Model.UpvotesAmount</p>
                <p class="fw-bold text-uppercase mb-0 d-none d-sm-block">@(Model.IsUserUpvoteActive ? "Votada" : "Votar")</p>
            </form>
            <time class="text-black-50 small">@Model.Date</time>
        </aside>

        <section class="col-9 col-md-10 d-flex flex-column justify-content-between">
            <header class="border-bottom border-2 border-primary mb-4 pb-1">
                <h2 class="card-title text-primary fs-3 fw-bold mb-2">@Model.Title</h2>
                <h3 class="card-subtitle fs-6 text-muted">@Model.UserName</h3>
            </header>

            @if(!String.IsNullOrEmpty(Model.Description))
            {
                <p class="lh-lg">@Model.Description</p>
            }
            else
            {
                <p>[Sin descripcion]</p>
            }

            <footer class="d-flex justify-content-between align-items-center">
                <p class="text-muted text-uppercase fw-bold mb-0"><i class="las la-tag fs-5"></i> @Model.CategoryName</p>

                @if(Model.IsUserSuggestion)
                {
                    <div class="d-flex align-items-center">
                        <a href="/Suggestions/EditSuggestion/@Model.Id"><i class="las la-pen text-muted fs-3 px-1"></i></a>
                        <form asp-controller="Suggestions" asp-action="DeleteSuggestion" method="post" class="delete-suggestion-form">
                            <input type="hidden" value="@Model.Id" name="id" />
                            <button class="bg-white border-0 p-0"><i class="las la-trash text-danger fs-3 px-1"></i></button>
                        </form>
                    </div>
                }
                
            </footer>
        </section>
    </div>
</section>

@if(Model.StateId != null)
{
    <section class="card shadow overflow-hidden mb-4" style="border: 4px solid @Model.StateColorHexCode">
        <div class="card-body row p-0">
            <div class="col-4 col-md-2 d-flex justify-content-center align-items-center" style="background-color:@Model.StateColorHexCode">
                <i class="las la-flag fs-1 text-white m-0"></i>
            </div>

            <div class="col-8 col-md-10 p-4">
                <h3 class="h4 fw-bold border-bottom-1 border-danger" style="color:@Model.StateColorHexCode;">@Model.StateName</h3>
                <p class="mb-0">@Model.StateDescription</p>
            </div>
        </div>
    </section>
}

@*<section class="card shadow border-0 p-4">
    <h3 class="card-title h4 text-primary fw-bold border-bottom border-2 border-primary mb-2">Panel de administración</h3>

    <p class="form-label text-primary fw-bold mt-4">Modificar estado:</p>
    <div class="btn-group" role="group" aria-label="Button group with nested dropdown">
        <form asp-controller="Suggestions" asp-action="SetSuggestionStatus" method="post" class="btn-group col col-md-6" role="group">
            <input type="hidden" name="suggestionId" value="@Model.Id" />

            <button id="btnGroupDrop" type="button" class="btn text-white dropdown-toggle d-block w-100" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="background-color: @Model.StateColorHexCode">@Model.StateName</button>
            <div class="dropdown-menu" aria-labelledby="btnGroupDrop" style="">
                
                @foreach(var state in Model.States)
                {
                    <button class="dropdown-item text-secondary" href="#" name="stateId" value="@state.Id"><i class="las la-square-full" style="color: @state.ColorHexCode"></i> @state.Name</button>
                }

            </div>
        </form>
    </div>
</section>*@

@if(Model.IsAdminOrModeratorUser)
{
    <section class="card shadow border-0 overflow-hidden p-4">
        <h3 class="card-title h4 text-primary fw-bold border-bottom border-2 border-primary mb-2">Panel de administración</h3>
        <form asp-controller="Suggestions" asp-action="SetSuggestionStatus" method="post">
            <input type="hidden" name="suggestionId" value="@Model.Id" />
            <div class="form-group mb-4">
                <label for="exampleSelect1" class="form-label text-primary fw-bold mt-4">Modificar estado:</label>
                <select class="form-select" name="stateId" id="exampleSelect1" role="button" required>
                    <option value="">Seleccionar nuevo estado:</option>

                    @foreach(var state in Model.States)
                    {
                        <option value="@state.Id">
                            <i class="las la-square-full fs-4" style="color: @state.ColorHexCode"></i>@state.Name
                        </option>
                    }

                </select>
            </div>
            <button class="btn btn-primary"><i class='las la-pen'></i> Editar estado </button>
        </form>
    </section>
}

@section Scripts {
    <script>
        // Button to upvote suggestion
        const buttonUpvote = document.getElementById('upvote-button');
        buttonUpvote.addEventListener('click', () => buttonUpvote.submit());

        // Buttons to change state
        const buttonChangeState = document.getElementById('change-state-button');
        buttonChangeState.addEventListener('change', () => {
            Swal.fire({
                title: '¿Está seguro?',
                text: "Cambiará el estado de la sugerencia",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Si, cámbialo!',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    buttonChangeState.submit()
                }
            })
        });

    </script>
}