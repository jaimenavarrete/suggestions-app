@using Microsoft.AspNetCore.Identity
@using SuggestionsApp.Models.Data.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
    IList<string> roles = new List<string>();

    if(user is not null) {
        roles = await UserManager.GetRolesAsync(user);
    }
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    @if(roles.Contains("Admin") || roles.Contains("Moderador"))
    {
        <li class="nav-item">
            <a id="admin" class="nav-link text-white" asp-area="" asp-controller="Admin" asp-action="SuggestionsApproval">Admin</a>
        </li>
    }

    <li class="nav-item">
        <a id="manage" class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><span class="d-lg-none">Perfil</span><span class="d-none d-lg-block">Hola, @UserManager.GetUserName(User)!</span></a>
    </li>
    
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-white">CERRAR SESIÓN</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>

    <li class="nav-item">
        <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">Registro</a>
    </li>
}
</ul>
